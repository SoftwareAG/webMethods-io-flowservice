{"componentChunkName":"component---src-templates-docs-js","path":"/loop-constructs/3-repeat-for-count","result":{"data":{"site":{"siteMetadata":{"title":"webMethods.io | FlowService Editor","docsLocation":"https://github.com/SoftwareAG/webmethods-io-flowservice/tree/master/content"}},"mdx":{"fields":{"id":"0612aeaa-fb11-5582-a30b-95e7cdd7c9f6","title":"Repeat execution for specific count","slug":"/loop-constructs/3-repeat-for-count"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Repeat execution for specific count\",\n  \"metaTitle\": \"Syntax Highlighting is the meta title tag for this page\",\n  \"metaDescription\": \"This is the meta description for this page\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar FlowService = makeShortcode(\"FlowService\");\nvar FlowStep = makeShortcode(\"FlowStep\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Repeat for Count\"), \" specifies the maximum number of times FlowService re-executes the child steps in the Repeat step. \"), mdx(\"h2\", null, \"Repeat for Count\"), mdx(\"p\", null, \"This control takes one input parameter:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Input field\")), mdx(\"p\", null, \"The \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"input field\"), \" can be a fixed/constant value or a field.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"If the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"count\"), \" is set to any value > 0, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Repeat for Count\"), \" step re-executes the child steps up to this number of times.  \"), mdx(\"p\", null, \"Children of a Repeat step always execute at least once. The \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"count\"), \" property specifies the maximum number of times the children can be re-executed. The concept is the same as Repeat for each. The only difference here is that you iterate for a specific count. It can be specified directly on a step or through a variable (I/O or Pipeline).\"), mdx(\"h2\", null, \"How to give fixed/constant value?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Repeat for Count\"), \" control and enter an \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"'integer'\"), \" as shown below:\\n\", mdx(\"img\", _extends({\n    parentName: \"li\"\n  }, {\n    \"src\": \"/webmethods-io-flowservice/82d1663be5a46b296540da450086b42a/repeat_for_count_select_constant_value.gif\",\n    \"alt\": \"Select constant value\"\n  })))), mdx(\"h2\", null, \"How to use a field?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Repeat for Count\"), \" control and click on the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"input dropdown\"), \" to open the dropdown.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The dropdown shows a list of fields available. You can also add fields from \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/webmethods-io-flowservice/define-io/1_adding_fields\"\n  }), \"I/O panel\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Click on one the values from dropdown to select a field.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note\"), \": Only fields with type \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"'String'\"), \" are supported for input field in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Repeat for Count\"), \".\"), mdx(\"h2\", null, \"Know the number of re-executions\"), mdx(\"p\", null, \"This control uses a field \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"'$retries'\"), \" which contains the number of re-executions of its children steps.\"), mdx(\"h2\", null, \"Example 1: Repeat for a specific count 5\"), mdx(FlowService, {\n    description: \"The above flow steps keeps appending a string for 6 times and prints it.\",\n    textToCopy: repeatCount5JSON,\n    mdxType: \"FlowService\"\n  }, mdx(FlowStep, {\n    comment: \"\",\n    img: \"loop-constructs/repeat_count.png\",\n    mdxType: \"FlowStep\"\n  })), mdx(\"h2\", null, \"Example 2: Repeat using a field\"), mdx(FlowService, {\n    description: \"The above flow steps keeps appending a string for given times (count + 1) and prints it.\",\n    textToCopy: repeatDynamicCountJSON,\n    mdxType: \"FlowService\"\n  }, mdx(FlowStep, {\n    comment: \"\",\n    img: \"loop-constructs/repeat_count_1.png\",\n    mdxType: \"FlowStep\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#repeat-for-count","title":"Repeat for Count"},{"url":"#how-to-give-fixedconstant-value","title":"How to give fixed/constant value?"},{"url":"#how-to-use-a-field","title":"How to use a field?"},{"url":"#know-the-number-of-re-executions","title":"Know the number of re-executions"},{"url":"#example-1-repeat-for-a-specific-count-5","title":"Example 1: Repeat for a specific count 5"},{"url":"#example-2-repeat-using-a-field","title":"Example 2: Repeat using a field"}]},"parent":{"__typename":"File","relativePath":"loop-constructs/3-repeat-for-count.mdx"},"frontmatter":{"metaTitle":"Syntax Highlighting is the meta title tag for this page","metaDescription":"This is the meta description for this page"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/conditional-constructs","title":"Conditional Constructs"}}},{"node":{"fields":{"slug":"/debug-flowservices","title":"Debug FlowServices"}}},{"node":{"fields":{"slug":"/define-io","title":"Define IO"}}},{"node":{"fields":{"slug":"/editor-usage","title":"Editor Usage"}}},{"node":{"fields":{"slug":"/error-handling","title":"Error Handling"}}},{"node":{"fields":{"slug":"/faqs","title":"Frequently Asked Questions"}}},{"node":{"fields":{"slug":"/flow-samples","title":"Flow Samples"}}},{"node":{"fields":{"slug":"/getting-started","title":"Getting Started"}}},{"node":{"fields":{"slug":"/","title":"Introducing FlowServices"}}},{"node":{"fields":{"slug":"/loop-constructs","title":"Loop Constructs"}}},{"node":{"fields":{"slug":"/pipeline-mapping","title":"Pipeline Mapping"}}},{"node":{"fields":{"slug":"/run-flowservices","title":"Run FlowServices"}}},{"node":{"fields":{"slug":"/schedule","title":"Schedule Flowservices"}}},{"node":{"fields":{"slug":"/simple-flowservice","title":"Simple FlowService"}}},{"node":{"fields":{"slug":"/conditional-constructs/1-condition-builder","title":"How to build conditions"}}},{"node":{"fields":{"slug":"/conditional-constructs/2-using-if","title":"Using conditions with If and Else"}}},{"node":{"fields":{"slug":"/conditional-constructs/3-using-elseif","title":"Multiple conditions with ElseIf"}}},{"node":{"fields":{"slug":"/conditional-constructs/4-using-switch","title":"The Switch Case"}}},{"node":{"fields":{"slug":"/conditional-constructs/5-using-branch","title":"Conditions with Branch"}}},{"node":{"fields":{"slug":"/debug-flowservices/1_debug-toolbar","title":"Controls in debug toolbar"}}},{"node":{"fields":{"slug":"/debug-flowservices/2_adding-removing-breakpoint","title":"To add or remove breakpoints"}}},{"node":{"fields":{"slug":"/debug-flowservices/3_debug-flowservice","title":"How to debug a Flowservice ?"}}},{"node":{"fields":{"slug":"/debug-flowservices/4_edit-pipeline-debug","title":"Modify pipeline values"}}},{"node":{"fields":{"slug":"/define-io/1_adding_fields","title":"Defining fields"}}},{"node":{"fields":{"slug":"/define-io/2_adding_document_reference","title":"Adding a document reference"}}},{"node":{"fields":{"slug":"/define-io/3_rearrange_fields","title":"Rearrange Fields"}}},{"node":{"fields":{"slug":"/define-io/4_loading_xml_json","title":"Loading XML or JSON"}}},{"node":{"fields":{"slug":"/define-io/5_copy_paste_search","title":"Copy, paste and Search"}}},{"node":{"fields":{"slug":"/editor-usage/1-naming-flow","title":"Naming a FlowService"}}},{"node":{"fields":{"slug":"/editor-usage/2-flow-actions","title":"FlowService Toolbar"}}},{"node":{"fields":{"slug":"/editor-usage/3-add-step","title":"Add or remove step"}}},{"node":{"fields":{"slug":"/editor-usage/4-step-dropdown","title":"Step Dropdown"}}},{"node":{"fields":{"slug":"/editor-usage/5-add-comment","title":"Add a comment to step"}}},{"node":{"fields":{"slug":"/editor-usage/6-step-dragndrop","title":"Rearrange Step - Drag and drop"}}},{"node":{"fields":{"slug":"/editor-usage/7-keyboard-shortcuts","title":"Keyboard shortcuts"}}},{"node":{"fields":{"slug":"/error-handling/1_handle-error","title":"How to handle an error ?"}}},{"node":{"fields":{"slug":"/error-handling/2_throw-error","title":"How to throw an error ?"}}},{"node":{"fields":{"slug":"/error-handling/3_exit-flow","title":"How to exit FlowService on success or failure ?"}}},{"node":{"fields":{"slug":"/flow-samples/1-Salesforce-to-marketo","title":"Generating Marketo Leads from Salesforce Contacts"}}},{"node":{"fields":{"slug":"/flow-samples/2-Concur-attendees-to-salesforce","title":"Get attendees from Concur and add them as contacts to Salesforce based on condition"}}},{"node":{"fields":{"slug":"/loop-constructs/1-loop-array","title":"How to loop over an Array ?"}}},{"node":{"fields":{"slug":"/loop-constructs/2-loop-input-output","title":"Loop with input-output"}}},{"node":{"fields":{"slug":"/loop-constructs/3-repeat-for-count","title":"Repeat execution for specific count"}}},{"node":{"fields":{"slug":"/loop-constructs/4-while","title":"Iterating with While"}}},{"node":{"fields":{"slug":"/loop-constructs/5-do-until","title":"Using Do Until"}}},{"node":{"fields":{"slug":"/pipeline-mapping/1_toolbar","title":"Toolbar"}}},{"node":{"fields":{"slug":"/pipeline-mapping/2_set-values","title":"Setting Values"}}},{"node":{"fields":{"slug":"/pipeline-mapping/3_mapping-fields","title":"Mapping Fields"}}},{"node":{"fields":{"slug":"/pipeline-mapping/4_remove-mapping","title":"Remove Mapping"}}},{"node":{"fields":{"slug":"/pipeline-mapping/5_copy-io-fields","title":"Copy IO fields into Pipeline"}}},{"node":{"fields":{"slug":"/pipeline-mapping/6_dropping-fields","title":"Dropping Fields from Pipeline"}}},{"node":{"fields":{"slug":"/pipeline-mapping/7_search","title":"Search"}}},{"node":{"fields":{"slug":"/pipeline-mapping/8_transform-pipeline","title":"Transform Pipeline"}}},{"node":{"fields":{"slug":"/run-flowservices/1_execute-flowservice","title":"Execute a FlowService"}}},{"node":{"fields":{"slug":"/run-flowservices/2_using-valuesets","title":"Using value sets"}}},{"node":{"fields":{"slug":"/run-flowservices/3_view-prev-results","title":"View previous execution results"}}},{"node":{"fields":{"slug":"/run-flowservices/4_download-json","title":"Download results as JSON"}}},{"node":{"fields":{"slug":"/schedule/1_schedule_once","title":"Schedule Once"}}},{"node":{"fields":{"slug":"/schedule/2_schedule_recurring","title":"Schedule Recurring"}}},{"node":{"fields":{"slug":"/simple-flowservice/add-services","title":"What's in a FlowService?"}}}]}},"pageContext":{"id":"0612aeaa-fb11-5582-a30b-95e7cdd7c9f6"}}}