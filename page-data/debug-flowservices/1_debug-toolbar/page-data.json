{"componentChunkName":"component---src-templates-docs-js","path":"/debug-flowservices/1_debug-toolbar","result":{"data":{"site":{"siteMetadata":{"title":"webMethods.io | FlowService Editor","docsLocation":"https://github.com/SoftwareAG/webmethods-io-flowservice/tree/master/content"}},"mdx":{"fields":{"id":"e65e8b79-70df-59fd-a25b-3ecb05bde1b6","title":"Controls in debug toolbar","slug":"/debug-flowservices/1_debug-toolbar"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Controls in debug toolbar\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar FlowService = makeShortcode(\"FlowService\");\nvar FlowStep = makeShortcode(\"FlowStep\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We have a toolbar in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Debug Panel\"), \". It has different debug options we can use while debugging a FlowService.\"), mdx(\"h2\", null, \"Debug toolbar controls\"), mdx(FlowService, {\n    title: \"\",\n    description: \"The above steps shows the different debug options available on the debug toolbar\",\n    mdxType: \"FlowService\"\n  }, mdx(FlowStep, {\n    comment: \"search in the inputs\",\n    img: \"debug-flowservices/toolbar/debug-toolbar-search.png\",\n    mdxType: \"FlowStep\"\n  }), mdx(FlowStep, {\n    comment: \"Disable/Enable breakpoints\",\n    img: \"debug-flowservices/toolbar/debug-toolbar-breakpoints.png\",\n    mdxType: \"FlowStep\"\n  }), mdx(FlowStep, {\n    comment: \"Resume to next breakpoint\",\n    img: \"debug-flowservices/toolbar/debug-toolbar-resume.png\",\n    mdxType: \"FlowStep\"\n  }), mdx(FlowStep, {\n    comment: \"Stop the debug execution\",\n    img: \"debug-flowservices/toolbar/debug-toolbar-stop.png\",\n    mdxType: \"FlowStep\"\n  }), mdx(FlowStep, {\n    comment: \"Restart the execution\",\n    img: \"debug-flowservices/toolbar/debug-toolbar-refresh.png\",\n    mdxType: \"FlowStep\"\n  }), mdx(FlowStep, {\n    comment: \"Stepover into the next flow\",\n    img: \"debug-flowservices/toolbar/debug-toolbar-stepover.png\",\n    mdxType: \"FlowStep\"\n  }), mdx(FlowStep, {\n    comment: \"Clear all breakpoints\",\n    img: \"debug-flowservices/toolbar/debug-toolbar-clear-breakpoints.png\",\n    mdxType: \"FlowStep\"\n  }), mdx(FlowStep, {\n    comment: \"Close the debug panel\",\n    img: \"debug-flowservices/toolbar/debug-toolbar-close.png\",\n    mdxType: \"FlowStep\"\n  })), mdx(\"h2\", null, \"Key shortcuts\"), mdx(\"p\", null, \"When you hover on every control, the shortcut key for invoking the respective control is shown in tooltip.\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Action\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Key shortcut\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"Disable/Enable breakpoints\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"CTRL + F8\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"Resume\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"F8\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"Stop\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"SHIFT + F5\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"Restart\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"F5\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"Step over\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"F10\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"Clear all breakpoints\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"ALT + F8\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"Close debug panel\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"CTRL + Q\")))), mdx(\"p\", null, \" \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note\"), \" : If we invoke \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Clear all breakpoints\"), \" action, we will not be able retrieve breakpoints back using undo action.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#debug-toolbar-controls","title":"Debug toolbar controls"},{"url":"#key-shortcuts","title":"Key shortcuts"}]},"parent":{"__typename":"File","relativePath":"debug-flowservices/1_debug-toolbar.mdx"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/conditional-constructs","title":"Conditional Constructs"}}},{"node":{"fields":{"slug":"/debug-flowservices","title":"Debug FlowServices"}}},{"node":{"fields":{"slug":"/define-io","title":"Define IO"}}},{"node":{"fields":{"slug":"/editor-usage","title":"Editor Usage"}}},{"node":{"fields":{"slug":"/error-handling","title":"Error Handling"}}},{"node":{"fields":{"slug":"/faqs","title":"Frequently Asked Questions"}}},{"node":{"fields":{"slug":"/flow-samples","title":"Flow Samples"}}},{"node":{"fields":{"slug":"/getting-started","title":"Getting Started"}}},{"node":{"fields":{"slug":"/","title":"Introducing FlowServices"}}},{"node":{"fields":{"slug":"/loop-constructs","title":"Loop Constructs"}}},{"node":{"fields":{"slug":"/pipeline-mapping","title":"Pipeline Mapping"}}},{"node":{"fields":{"slug":"/run-flowservices","title":"Run FlowServices"}}},{"node":{"fields":{"slug":"/schedule","title":"Schedule Flowservices"}}},{"node":{"fields":{"slug":"/simple-flowservice","title":"Simple FlowService"}}},{"node":{"fields":{"slug":"/conditional-constructs/1-condition-builder","title":"How to build conditions"}}},{"node":{"fields":{"slug":"/conditional-constructs/2-using-if","title":"Using conditions with If and Else"}}},{"node":{"fields":{"slug":"/conditional-constructs/3-using-elseif","title":"Multiple conditions with ElseIf"}}},{"node":{"fields":{"slug":"/conditional-constructs/4-using-switch","title":"The Switch Case"}}},{"node":{"fields":{"slug":"/conditional-constructs/5-using-branch","title":"Conditions with Branch"}}},{"node":{"fields":{"slug":"/debug-flowservices/1_debug-toolbar","title":"Controls in debug toolbar"}}},{"node":{"fields":{"slug":"/debug-flowservices/2_adding-removing-breakpoint","title":"To add or remove breakpoints"}}},{"node":{"fields":{"slug":"/debug-flowservices/3_debug-flowservice","title":"How to debug a Flowservice ?"}}},{"node":{"fields":{"slug":"/debug-flowservices/4_edit-pipeline-debug","title":"Modify pipeline values"}}},{"node":{"fields":{"slug":"/define-io/1_adding_fields","title":"Defining fields"}}},{"node":{"fields":{"slug":"/define-io/2_adding_document_reference","title":"Adding a document reference"}}},{"node":{"fields":{"slug":"/define-io/3_rearrange_fields","title":"Rearrange Fields"}}},{"node":{"fields":{"slug":"/define-io/4_loading_xml_json","title":"Loading XML or JSON"}}},{"node":{"fields":{"slug":"/define-io/5_copy_paste_search","title":"Copy, paste and Search"}}},{"node":{"fields":{"slug":"/editor-usage/1-naming-flow","title":"Naming a FlowService"}}},{"node":{"fields":{"slug":"/editor-usage/2-flow-actions","title":"FlowService Toolbar"}}},{"node":{"fields":{"slug":"/editor-usage/3-add-step","title":"Add or remove step"}}},{"node":{"fields":{"slug":"/editor-usage/4-step-dropdown","title":"Step Dropdown"}}},{"node":{"fields":{"slug":"/editor-usage/5-add-comment","title":"Add a comment to step"}}},{"node":{"fields":{"slug":"/editor-usage/6-step-dragndrop","title":"Rearrange Step - Drag and drop"}}},{"node":{"fields":{"slug":"/editor-usage/7-keyboard-shortcuts","title":"Keyboard shortcuts"}}},{"node":{"fields":{"slug":"/error-handling/1_handle-error","title":"How to handle an error ?"}}},{"node":{"fields":{"slug":"/error-handling/2_throw-error","title":"How to throw an error ?"}}},{"node":{"fields":{"slug":"/error-handling/3_exit-flow","title":"How to exit FlowService on success or failure ?"}}},{"node":{"fields":{"slug":"/flow-samples/1-Salesforce-to-marketo","title":"Generating Marketo Leads from Salesforce Contacts"}}},{"node":{"fields":{"slug":"/flow-samples/2-Concur-attendees-to-salesforce","title":"Get attendees from Concur and add them as contacts to Salesforce based on condition"}}},{"node":{"fields":{"slug":"/loop-constructs/1-loop-array","title":"How to loop over an Array ?"}}},{"node":{"fields":{"slug":"/loop-constructs/2-loop-input-output","title":"Loop with input-output"}}},{"node":{"fields":{"slug":"/loop-constructs/3-repeat-for-count","title":"Repeat execution for specific count"}}},{"node":{"fields":{"slug":"/loop-constructs/4-while","title":"Iterating with While"}}},{"node":{"fields":{"slug":"/loop-constructs/5-do-until","title":"Using Do Until"}}},{"node":{"fields":{"slug":"/pipeline-mapping/1_toolbar","title":"Toolbar"}}},{"node":{"fields":{"slug":"/pipeline-mapping/2_set-values","title":"Setting Values"}}},{"node":{"fields":{"slug":"/pipeline-mapping/3_mapping-fields","title":"Mapping Fields"}}},{"node":{"fields":{"slug":"/pipeline-mapping/4_remove-mapping","title":"Remove Mapping"}}},{"node":{"fields":{"slug":"/pipeline-mapping/5_copy-io-fields","title":"Copy IO fields into Pipeline"}}},{"node":{"fields":{"slug":"/pipeline-mapping/6_dropping-fields","title":"Dropping Fields from Pipeline"}}},{"node":{"fields":{"slug":"/pipeline-mapping/7_search","title":"Search"}}},{"node":{"fields":{"slug":"/pipeline-mapping/8_transform-pipeline","title":"Transform Pipeline"}}},{"node":{"fields":{"slug":"/run-flowservices/1_execute-flowservice","title":"Execute a FlowService"}}},{"node":{"fields":{"slug":"/run-flowservices/2_using-valuesets","title":"Using value sets"}}},{"node":{"fields":{"slug":"/run-flowservices/3_view-prev-results","title":"View previous execution results"}}},{"node":{"fields":{"slug":"/run-flowservices/4_download-json","title":"Download results as JSON"}}},{"node":{"fields":{"slug":"/schedule/1_schedule_once","title":"Schedule Once"}}},{"node":{"fields":{"slug":"/schedule/2_schedule_recurring","title":"Schedule Recurring"}}},{"node":{"fields":{"slug":"/simple-flowservice/add-services","title":"What's in a FlowService?"}}}]}},"pageContext":{"id":"e65e8b79-70df-59fd-a25b-3ecb05bde1b6"}}}